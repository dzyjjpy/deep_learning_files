python环境管理可以通过多种方式
pyenv、anaconda、virtualenv(python自带)

一、python自带的虚拟环境管理方法如下：

$ virtualenv ENV --python=python2.7  # 创建虚拟环境

$ source ENV/bin/activate   # 激活虚拟环境

$ pip install jupyter       # 使用pip下载安装jupyter

$ jupyter notebook (--ip=113.106.88.100 --port=8080)  # 如果要打开服务器端上的，输入对应ip和port号即可
                                                      # 本地打开local host直接使用即可

$ deactivate # 退出虚拟环境


二、pyvirtualenv方式

$ pyenv virtualenv 2.7.12 first_project　　#创建虚拟工作环境

$ pyenv virtualenvs         # 查看所有虚拟工作环境

$ pyenv activate first_project    #　激活虚拟环境

$ pip install ...      #　进入虚拟环境安装特定版本ｐｙｔｈｏｎ、ｔｆ、ｔｏｒｃｈ等

$ pyenv deactivate 　  ＃　退出虚拟环境


三、anaconda方式

$ conda env list   # 查看存在哪些python虚拟环境
$ conda create -n your_env_name python=X.X(2.7, 3.6)   # 创建某个python版本的虚拟环境，your_env_name文件可在Anaconda安装目录envs文件下找到

$ source activate your_env_name    # linux下激活python虚拟环境
$ source deactivate  # linux 退出python虚拟环境

$ source activate your_env_name    # windows下激活python虚拟环境
$ deactivate  # windows退出python虚拟环境

$ conda install -n your_env_name [package]  # 安装package到your_env_name中
$ conda remove -n your_env_name(虚拟环境名称) --all # 删除某个虚拟环境
$ conda remove --name $your_env_name  $package_name  # 删除环境中某个包

